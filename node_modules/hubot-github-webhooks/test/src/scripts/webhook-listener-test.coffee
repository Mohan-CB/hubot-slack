path = require 'path'
chai = require 'chai'
expect = chai.expect
request = require 'supertest'
Robot = require 'hubot/src/robot'

process.setMaxListeners(25)

robot = {}

json = {'test': 'test'}

postJson = (json, type) ->
  request(robot.router)
    .post('/hubot/gh')
    .set("X-GitHub-Event", type)
    .send(json)
    .expect(200, ->)

expectEventWithBody = (eventName, expBody, done) ->
  robot.on eventName, (body) ->
    expect(body).to.deep.equal(expBody)
    done()

describe 'Hubot with webhook-listener script', ->
  beforeEach ->
    robot = new Robot null, 'mock-adapter', true, 'TestHubot'
    robot.adapter.on 'connected', ->
      robot.loadFile path.resolve('.', 'src', 'scripts'),
        'webhook-listener.coffee'
      robot.brain.data.reviews ||= {}
    robot.run()

  afterEach ->
    robot.server.close()
    robot.shutdown

  it "should respond to a force push with github.push.forced event", (done) ->
    expectEventWithBody "github.push.forced", json, done
    json.forced = true
    postJson json, 'push'

  it "should respond to a github event with github.type.action event", (done) ->
    expectEventWithBody "github.type.action", json, done
    json.action = 'action'
    postJson json, 'type'
